package project.common.dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.mybatis.spring.SqlSessionTemplate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.util.StringUtils;

import egovframework.rte.ptl.mvc.tags.ui.pagination.PaginationInfo;

public class AbstractDAO {
    protected Log log = LogFactory.getLog(AbstractDAO.class);
     
    @Autowired
    private SqlSessionTemplate sqlSession;
     
    protected void printQueryId(String queryId) {
        if(log.isDebugEnabled()){
            log.debug("\t QueryId  \t:  " + queryId);
        }
    }
     
    public Object insert(String queryId, Object params){
        printQueryId(queryId);
        return sqlSession.insert(queryId, params);
    }
     
    public Object update(String queryId, Object params){
        printQueryId(queryId);
        return sqlSession.update(queryId, params);
    }
     
    public Object delete(String queryId, Object params){
        printQueryId(queryId);
        return sqlSession.delete(queryId, params);
    }
     
    public Object selectOne(String queryId){
        printQueryId(queryId);
        return sqlSession.selectOne(queryId);
    }
     
    public Object selectOne(String queryId, Object params){
        printQueryId(queryId);
        return sqlSession.selectOne(queryId, params);
    }
     
    @SuppressWarnings("rawtypes")
    public List selectList(String queryId){
        printQueryId(queryId);
        return sqlSession.selectList(queryId);
    }
     
    @SuppressWarnings("rawtypes")
    public List selectList(String queryId, Object params){
        printQueryId(queryId);
        return sqlSession.selectList(queryId,params);
    }
    
    <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
    <!DOCTYPE html>
    <html lang="ko">
    <head>
    <%@ include file="/WEB-INF/include/include-header.jspf" %>
    </head>
    <body>
        <h2>게시판 목록</h2>
        <table class="board_list">
            <colgroup>
                <col width="10%"/>
                <col width="*"/>
                <col width="15%"/>
                <col width="20%"/>
            </colgroup>
            <thead>
                <tr>
                    <th scope="col">글번호</th>
                    <th scope="col">제목</th>
                    <th scope="col">조회수</th>
                    <th scope="col">작성일</th>
                </tr>
            </thead>
            <tbody>
                <c:choose>
                    <c:when test="${fn:length(list) > 0}">
                        <c:forEach var="row" items="${list}" varStatus="status">
                            <tr>
                                <td>${row.IDX }</td>
                                <td class="title">
                                    <a href="#this" name="title">${row.TITLE }</a>
                                    <input type="hidden" id="IDX" value="${row.IDX }">
                                </td>
                                <td>${row.HIT_CNT }</td>
                                <td>${row.CREA_DTM }</td>
                            </tr>
                        </c:forEach>  
                    </c:when>
                    <c:otherwise>
                        <tr>
                            <td colspan="4">조회된 결과가 없습니다.</td>
                        </tr>
                    </c:otherwise>
                </c:choose>   
            </tbody>
        </table>
         
        <c:if test="${not empty paginationInfo}">
            <ui:pagination paginationInfo = "${paginationInfo}" type="text" jsFunction="fn_search"/>
        </c:if>
        <input type="hidden" id="currentPageNo" name="currentPageNo"/>
         
        <br/>
        <a href="#this" class="btn" id="write">글쓰기</a>
         
        <%@ include file="/WEB-INF/include/include-body.jspf" %>
        <script type="text/javascript">
            $(document).ready(function(){
                $("#write").on("click", function(e){ //글쓰기 버튼
                    e.preventDefault();
                    fn_openBoardWrite();
                }); 
                 
                $("a[name='title']").on("click", function(e){ //제목 
                    e.preventDefault();
                    fn_openBoardDetail($(this));
                });
            });
             
             
            function fn_openBoardWrite(){
                var comSubmit = new ComSubmit();
                comSubmit.setUrl("<c:url value='/sample/openBoardWrite.do' />");
                comSubmit.submit();
            }
             
            function fn_openBoardDetail(obj){
                var comSubmit = new ComSubmit();
                comSubmit.setUrl("<c:url value='/sample/openBoardDetail.do' />");
                comSubmit.addParam("IDX", obj.parent().find("#IDX").val());
                comSubmit.submit();
            }
             
            function fn_search(pageNo){
                var comSubmit = new ComSubmit();
                comSubmit.setUrl("<c:url value='/sample/openBoardList.do' />");
                comSubmit.addParam("currentPageNo", pageNo);
                comSubmit.submit();
            }
        </script> 
    </body>
    </html>
}